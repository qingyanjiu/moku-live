spring.application.name=live-client
spring.profiles.active=prod

management.security.enabled = false
endpoints.enabled=false
endpoints.refresh.enabled=true
endpoints.health.enabled=true

spring.cloud.config.enabled=true
spring.cloud.config.discovery.enabled=false
spring.cloud.config.uri=${custom.config.server.url}
spring.cloud.config.name=live
spring.cloud.config.profile=${spring.profiles.active}


app.id=mokulive

spring.thymeleaf.cache=false
#when using multiple templateResolvers,add  spring.thymeleaf.check-template=true.
#when set true,your custom resolver can try resolving the template and if it fails,
#it will pass the execution to the next resolver(defined in ThymeleafConfig.java) in the chain
spring.thymeleaf.check-template=true

live.client.title=Moku Live

server.port=8000

apollo.bootstrap.enabled=false

mybatis.type-aliases-package=moku.live.client.vo

logging.level.moku.live.client.mapper=error


